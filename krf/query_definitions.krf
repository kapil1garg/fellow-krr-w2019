;;; Krf file for query definitions
;;;(similarNUPerson ?person ?suggestedPerson)
(isa similarNUPerson Predicate)
(arity similarNUPerson 2)
(arg1Isa similarNUPerson NUStudent)
(arg2Isa similarNUPerson NUStudent)
(comment similarNUPerson "(similarNUPerson ?person ?suggestedPerson) says that ?person and ?suggestPerson have similar academic and hobby interests.")

;;;(sameAcademicProgram ?person ?suggestedPerson)
(isa sameAcademicProgram Predicate)
(arity sameAcademicProgram 2)
(arg1Isa sameAcademicProgram NUStudent)
(arg2Isa sameAcademicProgram NUStudent)
(comment sameAcademicProgram "(sameAcademicProgram ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same academic program.")

;;;(sameAcademicYear ?person ?suggestedPerson)
(isa sameAcademicYear Predicate)
(arity sameAcademicYear 2)
(arg1Isa sameAcademicYear NUStudent)
(arg2Isa sameAcademicYear NUStudent)
(comment sameAcademicYear "(sameAcademicYear ?person ?suggestedPerson) says that ?person and ?suggestPerson are in the same academic year.")

;;;(sameMajorAndYear ?person ?suggestedPerson)
(isa sameMajorAndYear Predicate)
(arity sameMajorAndYear 2)
(arg1Isa sameMajorAndYear NUStudent)
(arg2Isa sameMajorAndYear NUStudent)
(comment sameMajorAndYear "(sameMajorAndYear ?person ?suggestedPerson) says that ?person and ?suggestPerson are in the same academic year and have the same major.")

;;;(sameFieldOfWork ?person ?suggestedPerson)
(isa sameFieldOfWork Predicate)
(arity sameFieldOfWork 2)
(arg1Isa sameFieldOfWork NUStudent)
(arg2Isa sameFieldOfWork NUStudent)
(comment sameFieldOfWork "(sameFieldOfWork ?person ?suggestedPerson) says that ?person and ?suggestPerson have same field of work.")

;;;(personExperiencedWith ?suggestedPerson ?program)
(isa personExperiencedWith Predicate)
(arity personExperiencedWith 2)
(arg1Isa personExperiencedWith NUStudent)
(arg2Isa personExperiencedWith SoftwareSpecialty)
(comment personExperiencedWith "(personExperiencedWith ?suggestedPerson ?program) says that ?suggestPerson is experienced in ?program.")

;;;(sameHobbies ?person ?suggestedPerson)
(isa sameHobbies Predicate)
(arity sameHobbies 2)
(arg1Isa sameHobbies NUStudent)
(arg2Isa sameHobbies NUStudent)
(comment sameHobbies "(sameHobbies ?person ?suggestedPerson) says that ?person and ?suggestPerson have same hobbies.")

;;;(interestingEvents ?person ?event)
(isa interestingEvents Predicate)
(arity interestingEvents 2)
(arg1Isa interestingEvents NUStudent)
(arg2Isa interestingEvents NUEvent)
(comment interestingEvents "(interestingEvents ?person ?event) says that ?person might be interested in ?event.")
