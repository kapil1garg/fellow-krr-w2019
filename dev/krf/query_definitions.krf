;;; Krf file for query definitions
;;;(similarNUPerson ?person ?suggestedPerson)
(isa similarNUPerson Predicate)
(arity similarNUPerson 2)
(arg1Isa similarNUPerson NUStudent)
(arg2Isa similarNUPerson NUStudent)
(comment similarNUPerson "(similarNUPerson ?person ?suggestedPerson) says that ?person and ?suggestedPerson have similar academic and hobby interests.")

;;;(sameAcademicProgram ?person ?suggestedPerson)
(isa sameAcademicProgram Predicate)
(arity sameAcademicProgram 2)
(arg1Isa sameAcademicProgram NUStudent)
(arg2Isa sameAcademicProgram NUStudent)
(comment sameAcademicProgram "(sameAcademicProgram ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same academic program.")

;;;(sameAcademicYear ?person ?suggestedPerson)
(isa sameAcademicYear Predicate)
(arity sameAcademicYear 2)
(arg1Isa sameAcademicYear NUStudent)
(arg2Isa sameAcademicYear NUStudent)
(comment sameAcademicYear "(sameAcademicYear ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same academic year.")

;;;(sameMajorAndYear ?person ?suggestedPerson)
(isa sameMajorAndYear Predicate)
(arity sameMajorAndYear 2)
(arg1Isa sameMajorAndYear NUStudent)
(arg2Isa sameMajorAndYear NUStudent)
(comment sameMajorAndYear "(sameMajorAndYear ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same academic year and have the same major.")

;;;(sameFieldOfWork ?person ?suggestedPerson)
(isa sameFieldOfWork Predicate)
(arity sameFieldOfWork 2)
(arg1Isa sameFieldOfWork NUStudent)
(arg2Isa sameFieldOfWork NUStudent)
(comment sameFieldOfWork "(sameFieldOfWork ?person ?suggestedPerson) says that ?person and ?suggestedPerson have same field of work.")

;;;(personExperiencedWith ?suggestedPerson ?program)
(isa personExperiencedWith Predicate)
(arity personExperiencedWith 2)
(arg1Isa personExperiencedWith NUStudent)
(arg2Isa personExperiencedWith SoftwareSpecialty)
(comment personExperiencedWith "(personExperiencedWith ?suggestedPerson ?program) says that ?suggestedPerson is experienced in ?program.")

;;;(sameSoftwareExperience ?person ?suggestedPerson)
(isa sameSoftwareExperience Predicate)
(arity sameSoftwareExperience 2)
(arg1Isa sameSoftwareExperience NUStudent)
(arg2Isa sameSoftwareExperience NUStudent)
(comment sameSoftwareExperience "(sameSoftwareExperience ?person ?suggestedPerson) says that ?person and ?suggestedPerson have same software experience.")

;;;(sameHobbies ?person ?suggestedPerson)
(isa sameHobbies Predicate)
(arity sameHobbies 2)
(arg1Isa sameHobbies NUStudent)
(arg2Isa sameHobbies NUStudent)
(comment sameHobbies "(sameHobbies ?person ?suggestedPerson) says that ?person and ?suggestedPerson have same hobbies.")

;;;(sameHobbiesAndYear ?person ?suggestedPerson)
(isa sameHobbiesAndYear Predicate)
(arity sameHobbiesAndYear 2)
(arg1Isa sameHobbiesAndYear NUStudent)
(arg2Isa sameHobbiesAndYear NUStudent)
(comment sameHobbiesAndYear "(sameHobbiesAndYear ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same year and have same hobbies.")

;;;(sameHobbiesAndField ?person ?suggestedPerson)
(isa sameHobbiesAndField Predicate)
(arity sameHobbiesAndYear 2)
(arg1Isa sameHobbiesAndYear NUStudent)
(arg2Isa sameHobbiesAndYear NUStudent)
(comment sameHobbiesAndField "(sameHobbiesAndField ?person ?suggestedPerson) says that ?person and ?suggestedPerson are in the same field and have same hobbies.")

;;;(sameHobbiesWithExperienceIn ?person ?suggestedPerson ?program)
(isa sameHobbiesWithExperienceIn Predicate)
(arity sameHobbiesWithExperienceIn 2)
(arg1Isa sameHobbiesWithExperienceIn NUStudent)
(arg2Isa sameHobbiesWithExperienceIn NUStudent)
(comment sameHobbiesWithExperienceIn "(sameHobbiesWithExperienceIn ?person ?suggestedPerson) says that ?person and ?suggestedPerson have the same hobbies and ?suggestedPerson has software experience ?program.")

;;;(interestingEvents ?person ?event)
(isa interestingEvents Predicate)
(arity interestingEvents 2)
(arg1Isa interestingEvents NUStudent)
(arg2Isa interestingEvents NUEvent)
(comment interestingEvents "(interestingEvents ?person ?event) says that ?person might be interested in ?event.")

;;; (interestingFreeEvents ?person ?event)
(isa interestingFreeEvents Predicate)
(arity interestingFreeEvents 2)
(arg1Isa interestingFreeEvents NUStudent)
(arg2Isa interestingFreeEvents NUEvent)
(comment interestingFreeEvents "(interestingFreeEvents ?person ?event) says that ?person might be interested in free ?event.")

;;; (interestingEventsContact ?person ?event ?contact)
(isa interestingEventsContact Predicate)
(arity interestingEventsContact 3)
(arg1Isa interestingEventsContact NUStudent)
(arg2Isa interestingEventsContact NUEvent)
(arg3Isa interestingEventsContact Thing)
(comment interestingEventsContact "(interestingEventsContact ?person ?event ?contact) means that ?person will be interested in ?event and receive the appropriate contact information")

;;; (sameAcademicInterests ?person ?suggestedPerson)
(isa sameAcademicInterests Predicate)
(arity sameAcademicInterests 2)
(arg1Isa sameAcademicInterests NUStudent)
(arg2Isa sameAcademicInterests NUStudent)
(comment sameAcademicInterests "(sameAcademicInterests ?person ?suggestedPerson) says that ?person and ?suggestedPerson have same academic interests.")
